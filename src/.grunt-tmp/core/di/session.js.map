{"version":3,"sources":["session.js"],"names":["Zemit","app","factory","$database","$hook","$device","add","save","isStandalone","load","defaultData","segment","key","settings","db","data","angular","copy","prepared","get","getAll","set","values","undefined","Array","splice","length","forEach","push","value","Object","prop","merge","extend","prepare","Promise","resolve","reject","then","models","rows","model","getKey","getData","catch","promises","fromJson","toJson","update","ZmSession","all","flush","truncate"],"mappings":"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","file":"session.js","sourcesContent":["/**\n * Zemit Session\n * @author: <contact@dannycoulombe.com>\n * \n * Get and set configurations\n */\n(function() {\n\t\n\tZemit.app.factory('$session', ['$database', '$hook', '$device', function($database, $hook, $device) {\n\t\t\n\t    $hook.add('onBeforeUnload', () => {\n\t    \tfactory.save();\n\t    });\n\t    \n\t    $hook.add('onPageShow', () => {\n\t    \tif($device.isStandalone()) {\n\t\t\t\tfactory.load();\n\t\t\t}\n\t    });\n\t    \n\t    let defaultData = {\n\t\t\tsegment: {\n\t\t\t\tkey: null\n\t\t\t},\n\t\t\tsettings: {\n\t\t\t\t\n\t\t\t}\n\t\t};\n\t    \n\t\tvar factory = {\n\t\t\t\n\t\t\tdb: null,\n\t\t\tdata: angular.copy(defaultData),\n\t\t\tprepared: {},\n\t\t\t\n\t\t\tget: function(key) {\n\t\t\t\t\n\t\t\t\tif(key && !this.data[key]) {\n\t\t\t\t\tthis.data[key] = {};\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn this.data[key];\n\t\t\t},\n\t\t\t\n\t\t\tgetAll: function() {\n\t\t\t\t\n\t\t\t\treturn this.data;\n\t\t\t},\n\t\t\t\n\t\t\tset: function(key, values) {\n\t\t\t\t\n\t\t\t\tif(this.data[key] === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(this.data[key] instanceof Array) {\n\t\t\t\t\tthis.data[key].splice(0, this.data[key].length);\n\t\t\t\t\tvalues.forEach(value => {\n\t\t\t\t\t\tthis.data[key].push(value);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse if(this.data[key] instanceof Object) {\n\t\t\t\t\n\t\t\t\t\tfor(let prop in this.data[key]) {\n\t\t\t\t\t\tdelete this.data[key][prop];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tangular.merge(this.data[key], values);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.data[key] = values;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(this.prepared[key] && this.data[key] instanceof Object) {\n\t\t\t\t\tthis.data[key] = angular.extend(angular.copy(this.prepared[key]), this.data[key]);\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tprepare: function(key, values) {\n\t\t\t\t\n\t\t\t\tif(!this.data[key]) {\n\t\t\t\t\tthis.data[key] = {};\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(!this.prepared[key]) {\n\t\t\t\t\tthis.prepared[key] = {};\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar copy = angular.copy(this.data[key]) || {};\n\t\t\t\tangular.merge(this.data[key], values, copy);\n\t\t\t\t\n\t\t\t\tvar copy = angular.copy(this.prepared[key]) || {};\n\t\t\t\tangular.merge(this.prepared[key], values, copy);\n\t\t\t},\n\t\t\t\n\t\t\tload: function() {\n\t\t\t\t\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tfactory.db.getAll().then((models) => {\n\t\t\t\t\t\t\n\t\t\t\t\t\tfactory.data = angular.extend(angular.copy(defaultData), factory.data);\n\t\t\t\t\t\t\n\t\t\t\t\t\tangular.forEach(models.rows, (model) => {\n\t\t\t\t\t\t\tvar key = model.getKey();\n\t\t\t\t\t\t\tvar data = model.getData();\n\t\t\t\t\t\t\tfactory.set(key, data);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\tresolve(factory.data);\n\t\t\t\t\t}).catch(reject);\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\tsave: function() {\n\t\t\t\t\n\t\t\t\tvar promises = [];\n\t\t\t\tangular.forEach(factory.data, (values, key) => {\n\t\t\t\t\t\n\t\t\t\t\tvar data = angular.fromJson(angular.toJson(values));\n\t\t\t\t\tfactory.db.update(new ZmSession(key, data));\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\treturn Promise.all(promises);\n\t\t\t},\n\t\t\t\n\t\t\tflush: function() {\n\t\t\t\t\n\t\t\t\treturn factory.db.truncate().then(() => {\n\t\t\t\t\tthis.data = {};\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\t\n\t\tfactory.db = new $database('session');\n\t\t\n\t\treturn factory;\n\t}]);\n})();"]}