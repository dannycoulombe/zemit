{"version":3,"sources":["storage.js"],"names":["Zemit","app","factory","$util","$hook","$i18n","db","version","dbname","objectStores","defineStore","store","indexes","push","name","init","Promise","resolve","reject","request","indexedDB","open","onupgradeneeded","e","target","result","angular","forEach","objectStoreNames","contains","objectStore","createObjectStore","index","key","createIndex","keyPath","params","onsuccess","event","onerror","oncomplete","close","set","table","model","getKey","values","getData","transaction","put","localStorage","setItem","toJson","run","camelize","removeItem","update","remove","then","get","localStorageData","fromJson","getItem","className","eval","ZmError","data","json","getAll","items","openCursor","cursor","value","continue","find","query","delete","truncate","clear","import","export","results","promises","all","responses","response"],"mappings":"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","file":"storage.js","sourcesContent":["/**\n * Zemit Configs\n * @author: <contact@dannycoulombe.com>\n * \n * Get and set configurations\n */\n(function() {\n\tZemit.app.factory('$storage', ['$util', '$hook', '$i18n', function($util, $hook, $i18n) {\n\t\t\n\t\tvar factory = {\n\t\t\t\n\t\t\tdb: null,\n\t\t\tversion: 1,\n\t\t\tdbname: 'zm-layout-engine',\n\t\t\tobjectStores: [],\n\t\t\t\n\t\t\tdefineStore: function(store, indexes = []) {\n\t\t\t\tthis.objectStores.push({\n\t\t\t\t\tname: store,\n\t\t\t\t\tindexes: indexes\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\tinit: function() {\n\t\t\t\t\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\n\t\t\t\t\tvar request = indexedDB.open(this.dbname, this.version);\n\t\t\t\t\t\n\t\t\t\t\trequest.onupgradeneeded = (e) =>  {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar db = e.target.result;\n\t\t\t\t\t\t\n\t\t\t\t\t\tangular.forEach(factory.objectStores, (store) => {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(!db.objectStoreNames.contains(store.name)) {\n\t\t\t\t\t\t\t\tlet objectStore = db.createObjectStore(store.name);\n\t\t\t\t\t\t\t\tstore.indexes.forEach((index, key) => {\n\t\t\t\t\t\t\t\t\tobjectStore.createIndex(\n\t\t\t\t\t\t\t\t\t\tindex.name,\n\t\t\t\t\t\t\t\t\t\tindex.keyPath || index.name,\n\t\t\t\t\t\t\t\t\t\tindex.params\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\trequest.onsuccess = (event) =>  {\n\t\t\t\t\t\tfactory.db = event.target.result;\n\t\t\t\t\t\tresolve(event);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\trequest.onerror = (event) =>  {\n\t\t\t\t\t\treject(event);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\trequest.oncomplete = () =>  {\n\t\t\t\t\t\tfactory.db.close();\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\tset: function(table, model) {\n\t\t\t\t\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\n\t\t\t\t\tvar key = model.getKey();\n\t\t\t\t\tvar values = model.getData();\n\t\t\t\t\t\n\t\t\t\t\tvar transaction = this.db.transaction([table], 'readwrite');\n\t\t\t\t\tvar request = transaction.objectStore(table).put(values, key);\n\t\t\t\t\tlocalStorage.setItem(table + '_' + key, angular.toJson(values));\n\t\t\t\t\t\n\t\t\t\t\trequest.onsuccess = (event) =>  {\n\t\t\t\t\t\t$hook.run('onStorageSet', table, model);\n\t\t\t\t\t\t$hook.run('onStorageSet' + $util.camelize(table, true), [model]);\n\t\t\t\t\t\t$hook.run('onStorageSet' + $util.camelize(table, true) + '_' + key, model);\n\t\t\t\t\t\tlocalStorage.removeItem(table + '_' + key);\n\t\t\t\t\t\tresolve(event.target.result);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\trequest.onerror = (event) =>  {\n\t\t\t\t\t\treject(event.target.result);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\trequest.oncomplete = () =>  {\n\t\t\t\t\t\tfactory.db.close();\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\tupdate: function(table, model) {\n\t\t\t\t// TODO: Wrong... works for now but launches the hook for deletion\n\t\t\t\tthis.remove(table, model).then(() => {\n\t\t\t\t\tthis.set(table, model);\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\tget: function(table, key) {\n\t\t\t\t\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\n\t\t\t\t\tvar localStorageData = angular.fromJson(localStorage.getItem(table + '_' + key));\n\t\t\t\t\tif(localStorageData) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tlocalStorage.removeItem(table + '_' + key);\n\t\t\t\t\t\treturn this.set(table, key, localStorageData).then(() => {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlet className = (typeof localStorageData === 'Object' && localStorageData.className) || table;\n\t\t\t\t\t\t\tvar model = eval('new Zm' + $util.camelize(className, true) + '(key, localStorageData)');\n\t\t\t\t\t\t\tif(eval('model instanceof Zm' + $util.camelize(className, true))) {\n\t\t\t\t\t\t\t\tresolve(localStorageData);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\treturn reject(new ZmError($i18n.get('core.di.storage.errModelNotInitiated', { name: 'Zm' + $util.camelize(className) })));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar transaction = this.db.transaction([table]);\n\t\t\t\t\t\tvar objectStore = transaction.objectStore(table);\n\t\t\t\t\t\tvar request = objectStore.get(key);\n\t\t\t\t\t\t\n\t\t\t\t\t\trequest.onsuccess = (event) =>  {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlet className = (typeof localStorageData === 'Object' && localStorageData.className) || table;\n\t\t\t\t\t\t\tvar model = eval('new Zm' + $util.camelize(className, true) + '(key, event.target.result)');\n\t\t\t\t\t\t\tif(eval('model instanceof Zm' + $util.camelize(className, true))) {\n\t\t\t\t\t\t\t\tresolve(model);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\treturn reject(new ZmError($i18n.get('core.di.storage.errModelNotInitiated', { name: 'Zm' + $util.camelize(className) })));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\t\n\t\t\t\t\t\trequest.onerror = (event) => {\n\t\t\t\t\t\t\tvar data = localStorage.getItem(table + '_' + key);\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tvar json = angular.fromJson(data);\n\t\t\t\t\t\t\t\tresolve(json);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch(e) {\n\t\t\t\t\t\t\t\treject(event.target.result);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\t\n\t\t\t\t\t\trequest.oncomplete = () =>  {\n\t\t\t\t\t\t\tfactory.db.close();\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\tgetAll: function(table) {\n\t\t\t\t\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\n\t\t\t\t\tvar items = [];\n\t\t\t\t\tvar transaction = factory.db.transaction([table]);\n\t\t\t\t\tvar objectStore = transaction.objectStore(table);\n\t\t\t\t\tvar request = objectStore.openCursor();\n\t\t\t\t\t\n\t\t\t\t\trequest.onsuccess = (event) =>  {\n\t\t\t\t\t\tvar cursor = event.target.result;\n\t\t\t\t\t\tif (cursor) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlet className = (typeof cursor.value === 'Object' && cursor.value.className) || table;\n\t\t\t\t\t\t\tvar model = eval('new Zm' + $util.camelize(className, true) + '(cursor.key, cursor.value)');\n\t\t\t\t\t\t\tif(eval('model instanceof Zm' + $util.camelize(className, true))) {\n\t\t\t\t\t\t\t\titems.push(model);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\treturn reject(new ZmError($i18n.get('core.di.storage.errModelNotInitiated', { name: 'Zm' + $util.camelize(className) })));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcursor.continue();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tresolve(items);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\trequest.onerror = (event) =>  {\n\t\t\t\t\t\treject(event.target.result);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\trequest.oncomplete = () => {\n\t\t\t\t\t\tfactory.db.close();\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\tfind: function(table, query) {\n\t\t\t\t\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\n\t\t\t\t\tvar items = [];\n\t\t\t\t\tvar transaction = factory.db.transaction([table]);\n\t\t\t\t\tvar objectStore = transaction.objectStore(table);\n\t\t\t\t\tvar request = objectStore.openCursor();\n\t\t\t\t\t\n\t\t\t\t\trequest.onsuccess = (event) =>  {\n\t\t\t\t\t\tvar cursor = event.target.result;\n\t\t\t\t\t\tif (cursor) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlet className = (typeof cursor.value === 'Object' && cursor.value.className) || table;\n\t\t\t\t\t\t\tvar model = eval('new Zm' + $util.camelize(className, true) + '(cursor.key, cursor.value)');\n\t\t\t\t\t\t\tif(eval('model instanceof Zm' + $util.camelize(className, true))) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif(query(model)) {\n\t\t\t\t\t\t\t\t\titems.push(model);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\treturn reject(new ZmError($i18n.get('core.di.storage.errModelNotInitiated', { name: 'Zm' + $util.camelize(className) })));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcursor.continue();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tresolve(items);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\trequest.onerror = (event) =>  {\n\t\t\t\t\t\treject(event.target.result);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\trequest.oncomplete = () => {\n\t\t\t\t\t\tfactory.db.close();\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\tremove: function(table, key) {\n\t\t\t\t\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tvar transaction = this.db.transaction([table], 'readwrite');\n\t\t\t\t\tvar request = transaction.objectStore(table).delete(key);\n\t\t\t\t\t\n\t\t\t\t\trequest.onsuccess = (event) =>  {\n\t\t\t\t\t\tlocalStorage.removeItem(table + '_' + key);\n\t\t\t\t\t\t$hook.run('onStorageRemove' + $util.camelize(table, true), [key]);\n\t\t\t\t\t\t$hook.run('onStorageRemove' + $util.camelize(table, true) + '_' + key, key);\n\t\t\t\t\t\tresolve(event);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\trequest.onerror = reject;\n\t\t\t\t\trequest.oncomplete = () =>  {\n\t\t\t\t\t\tfactory.db.close();\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\ttruncate: function(table, key = null) {\n\t\t\t\t\n\t\t\t\tif(key) {\n\t\t\t\t\treturn this.remove(table, key);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar transaction = this.db.transaction([table], 'readwrite');\n\t\t\t\t\tvar request = transaction.objectStore(table).clear();\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\timport: function() {\n\t\t\t\t\n\t\t\t\t\n\t\t\t},\n\t\t\t\n\t\t\texport: function() {\n\t\t\t\t\n\t\t\t\tlet results = [];\n\t\t\t\tlet promises = [];\n\t\t\t\t\n\t\t\t\tthis.objectStores.forEach(objectStore => {\n\t\t\t\t\tpromises.push(factory.getAll(objectStore));\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\treturn Promise.all(promises).then(responses => {\n\t\t\t\t\tresponses.forEach(response => {\n\t\t\t\t\t\tresults.push(response);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\t\n\t\treturn factory;\n\t}]);\n})();"]}