{"version":3,"sources":["model.js"],"names":["ZmModel","key","data","extendData","is_deleted","isLoading","isLoaded","isSaving","isSaved","joins","joinRelation","single","many","joinType","parent","child","$injector","angular","element","injector","$util","get","className","snakeCase","constructor","name","substring","$database","$i18n","$hook","$new","setData","load","getKey","Object","assign","reset","setKey","s4","applyHooks","vm","extend","forEach","join","camelizedModel","camelize","model","thisModelKey","joinModelKey","relation","singleGetFunc","joinKey","singleSetFunc","eval","manySetFunc","joinDb","update","manyGetAllFunc","arg","Promise","resolve","reject","getAll","isDeleted","then","results","getData","result","clone","seenObjects","detect","obj","startsWith","isNew","storageHookKey","add","camelizedJoin","type","remove","promises","models","push","all","delete","isValid","ZmError","generateKey"],"mappings":"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","file":"model.js","sourcesContent":["class ZmModel {\n\t\n\tconstructor(key = null, data = null, extendData = null) {\n\t\t\n\t\tthis.key = key;\n\t\tthis.is_deleted = false;\n\t\tthis.data = extendData || null;\n\t\tthis.isLoading = false;\n\t\tthis.isLoaded = false;\n\t\tthis.isSaving = false;\n\t\tthis.isSaved = false;\n\t\tthis.joins = [];\n\t\tthis.joinRelation = {\n\t\t\tsingle: 1,\n\t\t\tmany: 2\n\t\t};\n\t\tthis.joinType = {\n\t\t\tparent: 1,\n\t\t\tchild: 2\n\t\t};\n\t\t\n\t\t// Prepare class name\n\t\tthis.$injector = angular.element('zemit').injector();\n\t\tthis.$util = this.$injector.get('$util');\n\t\tthis.className = this.$util.snakeCase(this.constructor.name.substring(2));\n\t\t\n\t\t// Load other DIs\n\t\tthis.$database = new this.$injector.get('$database')(this.className);\n\t\tthis.$i18n = this.$injector.get('$i18n');\n\t\t// this.$cache = new this.$injector.get('$cache').$new();\n\t\tthis.$hook = new this.$injector.get('$hook').$new();\n\t\t\n\t\tif(data) {\n\t\t\tthis.setData(data);\n\t\t}\n\t\t\n\t\tthis.load();\n\t}\n\t\n\tgetKey() {\n\t\treturn this.key;\n\t}\n\t\n\tsetKey(key) {\n\t\tthis.key = key;\n\t}\n\t\n\tgetName() {\n\t\treturn this.data.name || this.getKey();\n\t}\n\t\n\tsetData(data) {\n\t\t\n\t\tif(typeof this.data === 'object' && this.data !== null) {\n\t\t\tObject.assign(this.data, data);\n\t\t}\n\t\telse {\n\t\t\tthis.data = data;\n\t\t}\n\t}\n\t\n\tgetData() {\n\t\treturn this.data;\n\t}\n\t\n\tisValid() {\n\t\treturn true;\n\t}\n\t\n\tisDeleted() {\n\t\treturn this.is_deleted;\n\t}\n\t\n\tgenerateKey(reset = false) {\n\t\t\n\t\tif(!this.getKey()) {\n\t\t\tthis.setKey(this.$util.s4() + this.$util.s4() + this.$util.s4() + this.$util.s4());\n\t\t\tthis.applyHooks();\n\t\t}\n\t}\n\t\n\tsetJoins(joins) {\n\t\t\n\t\tvar vm = this; // Necessary for compilation\n\t\t\n\t\tangular.extend(this.joins, joins);\n\t\t\n\t\tjoins.forEach((join) => {\n\t\t\t\n\t\t\tlet camelizedModel = this.$util.camelize(join.model, true);\n\t\t\tlet thisModelKey = this.className + 'Key';\n\t\t\tlet joinModelKey = join.model + 'Key';\n\t\t\t\n\t\t\tswitch(join.relation) {\n\t\t\t\tcase this.joinRelation.single:\n\t\t\t\t\tlet singleGetFunc = () => {\n\t\t\t\t\t\t\n\t\t\t\t\t\tlet joinKey = this.data[joinModelKey];\n\t\t\t\t\t\treturn this.$database.get(join.model);\n\t\t\t\t\t\t// return this.$cache.get(this.$database.get(join.model));\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tlet singleSetFunc = (model) => {\n\t\t\t\t\t\tthis.data[joinModelKey] = model.getKey();\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\teval('vm.get' + camelizedModel + ' = singleGetFunc');\n\t\t\t\t\teval('vm.set' + camelizedModel + ' = singleSetFunc');\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\tcase this.joinRelation.many:\n\t\t\t\t\t\n\t\t\t\t\tlet manySetFunc = (model) => {\n\t\t\t\t\t\t\n\t\t\t\t\t\tlet joinDb = new this.$injector.get('$database')(join.model);\n\t\t\t\t\t\treturn joinDb.update(model);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tlet manyGetAllFunc = (arg) => {\n\t\t\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlet joinDb = new this.$injector.get('$database')(join.model);\n\t\t\t\t\t\t\t// this.$cache.get(joinDb.getAll(model => {\n\t\t\t\t\t\t\tjoinDb.getAll(model => {\n\t\t\t\t\t\t\t\treturn (!this.isDeleted() && model[thisModelKey] === this.getKey());\n\t\t\t\t\t\t\t}).then(results => {\n\t\t\t\t\t\t\t\tresolve(results);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\teval('vm.set' + camelizedModel + ' = manySetFunc');\n\t\t\t\t\teval('vm.getAll' + camelizedModel + 's = manyGetAllFunc');\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t}\n\t\n\ttoSaveFormat() {\n\t\treturn {\n\t\t\tkey: this.getKey(),\n\t\t\tdata: this.getData(),\n\t\t\tconstructor: this.constructor.name\n\t\t};\n\t}\n\t\n\tclone() {\n\t\treturn eval('new ' + this.constructor.name + `(\n\t\t\tthis.getKey(),\n\t\t\tthis.getData()\n\t\t)`);\n\t}\n\t\n\tgetWithoutCircularReferences() {\n\t\t\n\t\tvar result = this.clone();\n\t\tvar seenObjects = [];\n\t\t\n\t\tfunction detect(obj) {\n\t\t\tif (obj && typeof obj === 'object') {\n\t\t\t\tfor (let key in obj) {\n\t\t\t\t\tif (key.startsWith('$')) {\n\t\t\t\t\t\tdelete obj[key];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdetect(obj[key]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tdetect(result);\n\t\t\n\t\treturn result;\n\t}\n\t\n\tisNew() {\n\t\treturn this.getKey() === null;\n\t}\n\t\n\tload() {\n\t\t\n\t\tif(!this.isNew()) {\n\t\t\tthis.applyHooks();\n\t\t}\n\t}\n\t\n\tapplyHooks() {\n\t\t\n\t\tlet camelizedModel = this.$util.camelize(this.className, true);\n\t\tlet storageHookKey = camelizedModel + '_' + this.getKey();\n\t\t\n\t\t//TODO: Might execute multiple times if model is saving itselfs:\n\t\tthis.$hook.add('onStorageSet' + storageHookKey, (model) => {\n\t\t\tthis.setData(model.getData());\n\t\t});\n\t\t//this.$hook.add('onStorageRemove' + storageHookKey);\n\t}\n\t\n\tasync remove() {\n\t\t\n\t\tthis.joins.forEach(async join => {\n\t\t\t\n\t\t\tlet camelizedModel = this.$util.camelize(this.className, true);\n\t\t\tlet camelizedJoin = this.$util.camelize(join.model, true);\n\t\t\tlet storageHookKey = camelizedModel + '_' + this.getKey();\n\t\t\tlet thisModelKey = this.className + 'Key';\n\t\t\tlet joinModelKey = join.model + 'Key';\n\t\t\t\n\t\t\tif(join.type === this.joinType.child) {\n\t\t\t\t\n\t\t\t\tswitch(join.relation) {\n\t\t\t\t\tcase this.joinRelation.single:\n\t\t\t\t\t\tlet model = await eval('this.get' + camelizedJoin + '()');\n\t\t\t\t\t\tawait model.remove();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\tcase this.joinRelation.many:\n\t\t\t\t\t\tlet promises = [];\n\t\t\t\t\t\tlet models = await eval('this.getAll' + camelizedJoin + 's()');\n\t\t\t\t\t\tmodels.forEach(model => {\n\t\t\t\t\t\t\tpromises.push(model.remove());\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\tawait Promise.all(promises);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(join.type === this.joinType.parent) {\n\t\t\t\t\n\t\t\t\tswitch(join.relation) {\n\t\t\t\t\tcase this.joinRelation.single:\n\t\t\t\t\t\tlet parent = await eval('this.get' + camelizedJoin + '()');\n\t\t\t\t\t\tthis.$hook.add('onStorageRemove' + camelizedJoin, (key) => {\n\t\t\t\t\t\t\teval('this.getAll' + camelizedModel + 's()');\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\tcase this.joinRelation.many:\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\tawait this.$database.delete(this.getKey());\n\t\t\n\t\tthis.is_deleted = true;\n\t}\n\t\n\tasync save() {\n\t\t\n\t\tif(!this.isValid()) {\n\t\t\tthrow new ZmError(406, this.$i18n.get('core.model.notValidate'));\n\t\t}\n\t\t\n\t\tthis.generateKey();\n\t\tthis.isSaving = true;\n\t\t\n\t\tawait this.$database.update(this);\n\t\t\n\t\tthis.isSaving = false;\n\t\tthis.isSaved = true;\n\t}\n};"]}