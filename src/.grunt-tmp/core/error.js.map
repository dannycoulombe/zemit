{"version":3,"sources":["error.js"],"names":["ZmError","code","message","stack","Error","toString","split","splice","angular","forEach","key","trim"],"mappings":";;;;IAAMA,O,GAEL,iBAAYC,IAAZ,EAAkBC,OAAlB,EAA2B;AAAA;;AAE1B,KAAIC,QAAS,IAAIC,KAAJ,GAAYD,KAAb,CAAoBE,QAApB,GAA+BC,KAA/B,CAAqC,IAArC,CAAZ;AACAH,OAAMI,MAAN,CAAa,CAAb,EAAgB,CAAhB;AACAC,SAAQC,OAAR,CAAgBN,KAAhB,EAAuB,UAACD,OAAD,EAAUQ,GAAV,EAAkB;AACxCP,QAAMO,GAAN,IAAaR,QAAQS,IAAR,EAAb;AACA,EAFD;;AAIA,MAAKV,IAAL,GAAYA,IAAZ;AACA,MAAKC,OAAL,GAAeA,OAAf;AACA,MAAKC,KAAL,GAAaA,KAAb;AACA,C;;AACD","file":"error.js","sourcesContent":["class ZmError {\n\t\n\tconstructor(code, message) {\n\t\t\n\t\tvar stack = (new Error().stack).toString().split(\"\\n\");\n\t\tstack.splice(0, 2);\n\t\tangular.forEach(stack, (message, key) => {\n\t\t\tstack[key] = message.trim();\n\t\t});\n\t\t\n\t\tthis.code = code;\n\t\tthis.message = message;\n\t\tthis.stack = stack;\n\t}\n};"]}